@model GalileePayroll.Models.LoginModel



<div class="row">
    <div class="col-md-offset-4 col-md-4">
        <div id="loginContainer">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
            <div>
                <div class="form-horizontal">
                    <div class="row">
                        <div class="col-md-offset-3 col-md-4">
                            <strong id="loginHeader">LOGIN</strong>
                        </div>
                    </div>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                     
                    <div id="btnLogin" class="form-group">
                        <input type="submit" value="Login" class="btn btn-primary btn-lg btn-block" />

                    </div>
                </div>
            </div>
                

            }
        </div>
    </div>
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
