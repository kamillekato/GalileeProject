@model GalileeDatabase.USER
@{ 
    ViewBag.ListOfGender = new SelectList(new List<SelectListItem> {
                            new SelectListItem { Value="U",Text= "Unspecified",Selected =true },
                            new SelectListItem { Value = "M",Text="Male"},
                               new SelectListItem {Value = "F", Text ="Female" }
                           }, "Value", "Text");
    ViewBag.ListOfType = new SelectList(new List<SelectListItem> {
                            new SelectListItem { Value = "Admin",Text= "Admin",Selected = true },
                            new SelectListItem { Value = "Regular",Text = "Regular" }
                            }, "Value", "Text");
}
<div id="viewContent" class="row">
    <div class="col-md-10">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @*<div id="" class="form-horizontal">*@
            <header class="userHeader">Update USER </header>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
               
                <div class="row ">
                    <header class="subheaderAddUser col-md-11 col-md-offset-1">Information</header>
                </div>
                <div class="row rowAddUser">
                    <div class="col-md-11 col-md-offset-1">
                        <div class="row">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.FirstName, "First name", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.LastName, "Middle name", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.MiddleName, "Last name", htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row rowAddUser">
                    <div class="col-md-offset-1 col-md-11">
                        <div class="row">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Gender, (SelectList)ViewBag.ListOfGender, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Type, (SelectList)ViewBag.ListOfType, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row rowAddUser">
                    <div class="col-md-11 col-md-offset-1">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row" style="margin-top:18px">
                    <div class="col-md-11 col-md-offset-1">
                        <input type="submit" value="Update" class="btn btn-primary" style="width:120px;" />
                        <button type="button" class="btn btn-danger" style="width:120px;">Cancel</button>
                    </div>
                </div>


        }
    </div>
</div>

@section navPillsItem{
    <li id="firstNavItem" class="itemSideMenu"><a>Users</a></li>
    <li class="itemSideMenu"><a>Add User</a></li>
    <li class="active itemSideMenu"><a>Update User</a></li>
    <li class="itemSideMenu"><a>Delete User</a></li>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
